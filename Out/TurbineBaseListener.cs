//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\temp\Orsted.WindTurbine.DSL\Turbine.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITurbineListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class TurbineBaseListener : ITurbineListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.turbine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTurbine([NotNull] TurbineParser.TurbineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.turbine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTurbine([NotNull] TurbineParser.TurbineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.defect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefect([NotNull] TurbineParser.DefectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.defect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefect([NotNull] TurbineParser.DefectContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.defectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefectType([NotNull] TurbineParser.DefectTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.defectType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefectType([NotNull] TurbineParser.DefectTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.severity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeverity([NotNull] TurbineParser.SeverityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.severity"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeverity([NotNull] TurbineParser.SeverityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.actions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterActions([NotNull] TurbineParser.ActionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.actions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitActions([NotNull] TurbineParser.ActionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] TurbineParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] TurbineParser.CommentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocation([NotNull] TurbineParser.LocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocation([NotNull] TurbineParser.LocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.site"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSite([NotNull] TurbineParser.SiteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.site"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSite([NotNull] TurbineParser.SiteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.postition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostition([NotNull] TurbineParser.PostitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.postition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostition([NotNull] TurbineParser.PostitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.timezone"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimezone([NotNull] TurbineParser.TimezoneContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.timezone"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimezone([NotNull] TurbineParser.TimezoneContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.reporter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReporter([NotNull] TurbineParser.ReporterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.reporter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReporter([NotNull] TurbineParser.ReporterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.details"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDetails([NotNull] TurbineParser.DetailsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.details"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDetails([NotNull] TurbineParser.DetailsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="TurbineParser.summary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSummary([NotNull] TurbineParser.SummaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TurbineParser.summary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSummary([NotNull] TurbineParser.SummaryContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
